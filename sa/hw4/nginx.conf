#user  nobody;
worker_processes  1;

# This default error log path is compiled-in to make sure configuration parsing
# errors are logged somewhere, especially during unattended boot when stderr
# isn't normally logged anywhere. This path will be touched on every nginx
# start regardless of error log location configured here. See
# https://trac.nginx.org/nginx/ticket/147 for more info.
#
#error_log  /var/log/nginx/error.log;
#

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;
    server {
        listen       0.0.0.0:80;
        server_name  10.113.0.76;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
        location / {
            root   /usr/local/www/nginx/ip;
            index  index.html index.htm;
        }
        location /private {
            root   /usr/local/www/nginx/ip;
            index  index.html index.htm;
            allow 10.113.0.254;
            deny all;
            auth_basic "Administrator Login";
            auth_basic_user_file /usr/local/etc/nginx/.htpasswd;
        }
        #rewrite ^ https://$host$uri permanent;
        #rewrite ^(.*) https://$host$1 last;
        #return 301 https://10.113.0.76$request_uri;
    }

    server {
        listen 0.0.0.0:443 ssl http2;
        server_name  10.113.0.76;
        ssl_certificate /etc/ssl/server.crt;
        ssl_certificate_key /etc/ssl/server.key;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
        location / {
            root   /usr/local/www/nginx/ip;
            index  index.html index.htm;
        }
        location /private {
            root   /usr/local/www/nginx/ip;
            index  index.html index.htm;
            allow 10.113.0.254;
            deny all;
            auth_basic "Administrator Login";
            auth_basic_user_file /usr/local/etc/nginx/.htpasswd;
        }
    }

    server {
        listen 0.0.0.0:80;
        server_name 76.nycu.cs;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
        location / {
            root        /usr/local/www/nginx/vhost;
            index       index.html index.php;
        }
        server_tokens off;
        return 301 https://76.nycu.cs$request_uri;
    }
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    upstream wss_server {
        server 127.0.0.1:8081;
    }
    server {
        listen 0.0.0.0:443 ssl http2;
        server_name 76.nycu.cs;
        ssl_certificate /etc/ssl/server.crt;
        ssl_certificate_key /etc/ssl/server.key;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
        location / {
            root        /usr/local/www/nginx/vhost;
            index       index.html index.php;
        }
        location /wsconnect {
            proxy_pass  https://wss_server/wsconnect;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }
        location ~ \.php$ {
            fastcgi_pass unix:/var/run/php-fpm.sock;
            fastcgi_param SCRIPT_FILENAME /usr/local/www/nginx/vhost$fastcgi_script_name;
            include fastcgi_params;
        }
        server_tokens off;
    }


    upstream ws_server {
        server 127.0.0.1:8080;
    }

    server {
        listen 0.0.0.0:80;
        server_name 76_ws.nycu.cs;
        location /wsconnect {
            proxy_pass http://ws_server/wsconnect;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }
        location /wsdemo.html {
            root        /usr/local/www/nginx/ws;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
